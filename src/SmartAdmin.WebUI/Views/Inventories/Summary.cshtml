@model IEnumerable<SideXC.WebUI.Controllers.Inventory.InventorySummary>

@{
    ViewData["Title"] = "Summary";
}

<main id="js-page-content" role="main" class="page-content">
    <ol class="breadcrumb page-breadcrumb">
        <li class="breadcrumb-item"><a href="/#">Home</a></li>
        <li class="breadcrumb-item">Inventory</li>
        <li class="breadcrumb-item active">Sumarizado</li>
        <li class="position-absolute pos-top pos-right d-none d-sm-block"><span class="js-get-date"></span></li>
    </ol>
    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-hdr">
                    <h2>
                        Information
                    </h2>
                    <div class="panel-toolbar">
                        <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
                        <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
                    </div>
                </div>
                <div class="panel-container show">
                    <div class="panel-content">
                        <!-- datatable start -->
                        <table id="tableReport">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@Html.DisplayNameFor(model => model.Material)</th>
                                    <th>Descripci&oacute;n</th>
                                    <th>@Html.DisplayNameFor(model => model.MOQ)</th>
                                    <th>Cantidad Disponible</th>
                                    <th>Diferencia MOQ</th>
                                    <th>Costo de Compra</th>
                                    <th>Precio de Venta</th>
                                    <th>Total Inversi&oacute;n</th>
                                    <th>Total Venta</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    var color = "";
                                    var diffCostoInversion = item.QuantityAvailable * Convert.ToDouble(item.StandarCost);
                                    var diffCostoVenta = item.QuantityAvailable * Convert.ToDouble(item.SalePrice);
                                    if (item.Difference <= 10)
                                    {
                                        color = "bg-danger";
                                    }
                                    else if (item.Difference <= 20)
                                    {
                                        color = "bg-warning";
                                    }
                                    else if (item.QuantityAvailable == 0)
                                    {
                                        color = "bg-danger";
                                    }
                                <tr>
                                    <td class="text-center">
                                        <a class="btn btn-sm btn-outline-warning btn-pills" title="Inventario" asp-action="Index" asp-route-id="@item.Id">
                                            <span class="fa fa-warehouse-alt"></span>
                                        </a>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Material)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MOQ)</td>
                                    <td>@Html.DisplayFor(modelItem => item.QuantityAvailable)</td>
                                    <td class="@color">@Html.DisplayFor(modelItem => item.Difference)</td>
                                    <td>@string.Format("{0:C}", item.StandarCost)</td>
                                    <td>@string.Format("{0:C}", item.SalePrice)</td>
                                    <td>@string.Format("{0:C}", diffCostoInversion)</td>
                                    <td>@string.Format("{0:C}", diffCostoVenta)</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                        <!-- datatable end -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section ScriptsBlock {
    <script src="~/js/utilities/common.js"></script>
    <script src="~/js/datagrid/datatables/datatables.bundle.js"></script>
    <script src="~/js/datagrid/datatables/datatables.export.js"></script>

    <script>
        $(document).ready(function () {
            _ConvertToDatatableWithButtons("tableReport", "InventaryFile", 1);
        });

    </script>
}

